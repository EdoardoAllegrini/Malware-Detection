'''
Create a DataLoader class

Label example

img1.png,0
img2.png,1
'''

from os.path import join
import pandas as pd 
from torchvision.io import read_image
from torch.utils.data import Dataset

class MalwareDataset(Dataset):
    # Labels is the path of the csv that contains the labels formatted like above
    def __init__(self, labels, img_dir, transform=None):
        self.img_dir = img_dir
        self.transform = transform
        self.labels = pd.read_csv(labels)        

    # Returns the length of the dataset
    def __len__(self):
        return len(self.labels)

    # Loads data from the disk
    def __getitem__(self, index):
        # Create the images path
        img_path = join(self.img_dir, self.labels.iloc[index,0])
        image = read_image(img_path)
        # Read the label
        label = self.labels.iloc[index,1]
        # If the transformation is not None, transform the image
        if self.transform:
            image = self.transform(image)
        return image, label




"""
    New implementation of load_dataset
"""


if __name__ == "__main__":
    from torchvision.datasets import ImageFolder
    from pathlib import Path

    train_path = Path(__file__).parent / "../data/train"
    test_path = Path(__file__).parent / "../data/test"

    train_dataset = ImageFolder(root=train_path)
    test_dataset = ImageFolder(root=test_path)

    print(train_dataset)

import cv2
import numpy as np
from PIL import Image
from matplotlib import pyplot as plt
import os

def explore_path(path):
    """This function takes in input a path and for each file in the tree path, calls the function exe_to_png(file) 

    Args:
        path (str): A path
    """
    for filename in os.listdir(path):
        if os.path.isdir(path + '/' + filename):
            explore_path(path + '/' + filename)
        else:
           exe_to_png(path+'/'+filename)
    return 

def exe_to_png(path_exe):
    """This function takes in input an executable path and converts it in an image representation.

    Args:
        path_exe (str): A path

    Returns:
        Image: The image representation of path_exe
    """
    image = np.zeros((256, 256))
    i = j = 0
    with open(path_exe, 'rb') as f:
        current_byte = f.read(1)
        while current_byte != b'':
            # compute pixel color based on current byte
            pixel = int.from_bytes(current_byte, byteorder='big')
            # store pixel in image
            image[i, j] = pixel
            # update i, j indexes
            if i >= 255 and j >= 255: 
                print("[+] Max image dim exceeded")
                break
            elif j >= 255: 
                j = 0
                i += 1
            else:
                j += 1
            # get next byte
            current_byte = f.read(1)

        img = Image.fromarray(image, mode="RGB")
        img.save("images/" + path_exe.split('.exe')[0][5:] + ".png")

    return image


if __name__ == "__main__":
    path = "data/"
    explore_path(path)


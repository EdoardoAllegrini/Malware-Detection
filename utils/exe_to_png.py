import cv2
import numpy as np
from PIL import Image
from matplotlib import pyplot as plt
import os

def explore_path(path):
    for filename in os.listdir(path):
        if os.path.isdir(path + '/' + filename):
            explore_path(path + '/' + filename)
        else:
           exe_to_png(path+'/'+filename)
    return 

def exe_to_png(path_exe):

    image = np.zeros((256, 256))
    i = j = 0
    with open(path_exe, 'rb') as f:
        current_byte = f.read(1)
        while current_byte != b'':
            # compute pixel color based on current byte
            pixel = int.from_bytes(current_byte, byteorder='big')
            # store pixel in image
            image[i, j] = pixel
            # update i, j indexes
            if i >= 255 and j >= 255: 
                print("[+] Max image dim exceeded")
                break
            elif j >= 255: 
                j = 0
                i += 1
            else:
                j += 1
            # get next byte
            current_byte = f.read(1)

        # We save the image
        ## Possiamo non salvare l'immagine intera per risparmiare spazio
        img = Image.fromarray(image, mode="RGB")
        # os.mkdir("images")
        img.save("images/" + path_exe.split('/')[-1] + ".png")
        # # We down-sample the image to 32x32 in order to preserve memory
        # img = img.resize((32,32),Image.LANCZOS)
        # # os.mkdir("images/resized")
        # img.save("images/resized/"+path_exe[20:]+".png")
    return image


if __name__ == "__main__":
    path = "data/dataset_malware"
    explore_path(path)
    # client_img = exe_to_png(r"data/client")
    # server_img = exe_to_png(r"data/server")
    # prova_img = exe_to_png(r"data/provaMia")

    # # create figure
    # fig = plt.figure(figsize=(10, 7))
    
    # rows = 2
    # columns = 2
    
    # # Adds a subplot at the 1st position
    # fig.add_subplot(rows, columns, 1)
    
    # # showing image
    # plt.imshow(client_img)
    # plt.axis('off')
    # plt.title("First")
    
    # # Adds a subplot at the 2nd position
    # fig.add_subplot(rows, columns, 2)
    
    # # showing image
    # plt.imshow(server_img)
    # plt.axis('off')
    # plt.title("Second")
    
    # # Adds a subplot at the 3rd position
    # fig.add_subplot(rows, columns, 3)
    
    # # showing image
    # plt.imshow(prova_img)
    # plt.axis('off')
    # plt.title("Third")
  

    # plt.show()

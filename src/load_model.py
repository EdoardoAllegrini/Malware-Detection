
def load_model():
    import torch
    from config import device
    from cnn import OurCNN
    model = OurCNN().to(device)
    # Load the model
    model.load_state_dict(torch.load('model.pth'))
    
    return model


if __name__ == "__main__":
    from PIL import Image
    from torchvision import transforms
    from pathlib import Path
    import os
    
    data_path = Path(__file__).parent / "../data/test/benign"
    for f in os.listdir(data_path):
        img = Image.open(str(data_path) + '/' + f)
        tf = transforms.Compose([transforms.ToTensor()])
        img_tf = tf(img).float().unsqueeze(0)
        model = load_model()
        pred = model(img_tf)
        print(pred.data.numpy().argmax())
        # if (pred.argmax(1)).type(torch.float).sum().item() != 1:
        #     print(f)
        #     break